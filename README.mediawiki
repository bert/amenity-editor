== Amenity Editor for OSM ==

This project contains the source code for the Amenity Editor 
which is available online at http://ae.osmsurround.org.

The Amenity Editor in written in Java. It is build using the 
SpringFramework (http://www.springframework.org/).
Apache Maven (http://maven.apache.org) is used as the build system.

== Building ==

To build the Amenity Editor launch:

mvn package

This will create a WAR file in the target folder with the name "amenity-editor.war".
Place this file in the webapps folder of your 
servlet container (http://tomcat.apache.org) and launch the server.

You can then access the amenity editor with

http://localhost:8080/amenity-editor

The default profile will build an Amenity Editor which will use a H2 
In-Memory Database (http://www.h2database.com) and access the Developer OSM API. 
The database will be cleared after each restart.

If you want to download some nodes, you will have to change the 
profile settings an build the project with:

mvn package -P osm-prd

This will create a WAR file which can access the production API. This means that you will 
be able to download nodes from the OSM server and see them on the map.

If you want to be able to edit nodes, you will have to register an OAuth App on the OSM webpage 
(http://www.openstreetmap.org/user/&gt;username&gt;/oauth_clients/new).
Then create a new profile in you Maven settings.xml like this:

&gt;profile&gt;
	&gt;id&gt;osm-oauth&gt;/id&gt;
	&gt;properties&gt;
		&gt;oauth.consumerKey&gt;...&gt;/oauth.consumerKey&gt;
		&gt;oauth.consumerSecret&gt;...&gt;/oauth.consumerSecret&gt;
	&gt;/properties&gt;
&gt;/profile&gt;

Now build the project with the osm-prd profile and the osm-oauth profile:

mvn package -P osm-prd,osm-oauth

The H2 database won't be suitable for production. You can install a db of your choice 
and create a schema from the src/main/resources/database.sql file.

Here is an example for PostgreSQL:

&gt;profile&gt;
	&gt;id&gt;ae-postgresql&gt;/id&gt;
	&gt;properties&gt;
		&gt;db.driver&gt;org.postgresql.Driver&gt;/db.driver&gt;
		&gt;db.url&gt;jdbc:postgresql://localhost/ae&gt;/db.url&gt;
		&gt;db.user&gt;osm&gt;/db.user&gt;
		&gt;db.password&gt;osm&gt;/db.password&gt;
	&gt;/properties&gt;
	&gt;dependencies&gt;
		&gt;dependency&gt;
			&gt;groupId&gt;postgresql&gt;/groupId&gt;
			&gt;artifactId&gt;postgresql&gt;/artifactId&gt;
			&gt;version&gt;8.4-702.jdbc4&gt;/version&gt;
		&gt;/dependency&gt;
	&gt;/dependencies&gt;
&gt;/profile&gt;

Now build the project with:

mvn package -P osm-prd,osm-oauth,ae-postgresql

This gives you a full production release.

